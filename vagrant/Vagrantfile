# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.

Vagrant.configure(2) do |config|
  

   config.vm.define "rtr1" do |node|
      node.vm.box =  "IOS-XRv"

      node.vm.network "forwarded_port", guest: 58822, host: 58822 

      # gig0/0/0/0 connected to "link1", gig0/0/0/1 connected to "link2"
      # auto_config is not supported for XR, set to false

      node.vm.network :private_network, virtualbox__intnet: "link1", auto_config: false
      node.vm.network :private_network, virtualbox__intnet: "link2", auto_config: false

      #Source a config file and apply it to XR

      node.vm.provision "transfer_config", type: "file", source: "configs/rtr1_config", destination: "/home/vagrant/rtr_config"

      node.vm.provision "apply_config", type: "shell" do |s|
          s.path =  "scripts/apply_config.sh"
          s.args = ["/home/vagrant/rtr_config"]
      end

      # Make sure virtualbox nics are set to promiscuous mode for a bridge node
      node.vm.provider :virtualbox do |vb|
        vb.customize ["modifyvm", :id, "--nicpromisc2", "allow-all"]
        vb.customize ["modifyvm", :id, "--nicpromisc3", "allow-all"]
      end

      # Transfer container XML spec file and container rootfs to the correct locations
      node.vm.provision "transfer_xml", type: "file", source: "pathchecker.xml", destination: "/home/vagrant/pathchecker.xml"
      node.vm.provision "transfer_rootfs", type: "file", source: "pathchecker_rootfs.tar.gz", destination: "/misc/app_host/scratch/pathchecker_rootfs.tar.gz"

      # Launch the container using the XML file and the rootfs
      node.vm.provision "launch_lxc", type: "shell" do |s|
          s.path =  "scripts/launch_lxc_rtr1.sh"
      end
      
    end

   config.vm.define "devbox" do |node|
      node.vm.box =  "ubuntu/trusty64"

      # eth1 and eth2 connected to rtr1  and  eth3 and eth4  connected to rtr2
      # auto_config is not supported for XR, set to false

      node.vm.network :private_network, virtualbox__intnet: "link1", auto_config: false
      node.vm.network :private_network, virtualbox__intnet: "link2", auto_config: false

      node.vm.network :private_network, virtualbox__intnet: "link3", auto_config: false
      node.vm.network :private_network, virtualbox__intnet: "link4", auto_config: false

      # Important! For this node to act as a bridge, All the virtualbox interfaces must be in promiscuous mode.
      node.vm.provider :virtualbox do |vb|
        vb.customize ["modifyvm", :id, "--nicpromisc2", "allow-all"]
        vb.customize ["modifyvm", :id, "--nicpromisc3", "allow-all"]
        vb.customize ["modifyvm", :id, "--nicpromisc4", "allow-all"]
        vb.customize ["modifyvm", :id, "--nicpromisc5", "allow-all"]
      end

      # Set up the bridge interfaces
      node.vm.provision "setup_devbox", type: "shell" do |s|
          s.path =  "scripts/bridge_setup.sh"
      end

      # Transfer all the impairment helper scripts to cause network degradation, later
      node.vm.provision "transfer_ref_impair", type: "file", source: "scripts/impair_reference.sh", destination: "/home/vagrant/impair_reference.sh"
      node.vm.provision "transfer_bkp_impair", type: "file", source: "scripts/impair_backup.sh", destination: "/home/vagrant/impair_backup.sh"
      node.vm.provision "transfer_stop_impair", type: "file", source: "scripts/stop_impair.sh", destination: "/home/vagrant/stop_impair.sh"

    end


   config.vm.define "rtr2" do |node|
      node.vm.box =  "IOS-XRv"

      # gig0/0/0/0 connected to "link3"  and  gig0/0/0/1 connected to "link4"
      # auto_config is not supported for XR, set to false

      node.vm.network :private_network, virtualbox__intnet: "link3", auto_config: false
      node.vm.network :private_network, virtualbox__intnet: "link4", auto_config: false


      # Install iperf from devhub repo
      node.vm.provision "install_iperf", type: "shell"  do |s|
          s.path =  "scripts/install_iperf_rtr2.sh"
      end

      #Source a config file and apply it to XR

      node.vm.provision "transfer_config", type: "file", source: "configs/rtr2_config", destination: "/home/vagrant/rtr_config"

      node.vm.provision "apply_config", type: "shell" do |s|
          s.path =  "scripts/apply_config.sh"
          s.args = ["/home/vagrant/rtr_config"]
      end


      # Set the virtualbox interfaces to promiscuous mode for the bridge node connected.
      node.vm.provider :virtualbox do |vb|
        vb.customize ["modifyvm", :id, "--nicpromisc2", "allow-all"]
        vb.customize ["modifyvm", :id, "--nicpromisc3", "allow-all"]
      end

    end


end
